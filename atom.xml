<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>apollo</title>
  
  <link href="/hexo-blog.io/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-10-06T04:20:13.744Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Syoogool</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>heroku 配合 mLab部署node应用</title>
    <link href="http://yoursite.com/2017/10/06/heroku%E9%83%A8%E7%BD%B2node%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2017/10/06/heroku部署node应用/</id>
    <published>2017-10-06T03:34:26.110Z</published>
    <updated>2017-10-06T04:20:13.744Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/nswbmw/N-blog/blob/master/book/4.15%20%E9%83%A8%E7%BD%B2.md" target="_blank" rel="external">参考文章</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/nswbmw/N-blog/blob/master/book/4.15%20%E9%83%A8%E7%BD%B2.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文章&lt;/a&gt;&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>记freeCodeCamp数字格式转化练习题</title>
    <link href="http://yoursite.com/2017/09/11/freeCodeCamp/"/>
    <id>http://yoursite.com/2017/09/11/freeCodeCamp/</id>
    <published>2017-09-11T03:35:49.171Z</published>
    <updated>2017-09-14T08:23:27.430Z</updated>
    
    <content type="html"><![CDATA[<h2 id="阿拉伯数字转化为罗马数字-转化细节"><a href="#阿拉伯数字转化为罗马数字-转化细节" class="headerlink" title="阿拉伯数字转化为罗马数字,转化细节"></a>阿拉伯数字转化为罗马数字,<a href="http://www.shuxuele.com/roman-numerals.html" target="_blank" rel="external">转化细节</a></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">convertToRoman</span>(<span class="params">num</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> arr = <span class="built_in">String</span>(num).split(<span class="string">''</span>);</div><div class="line">  <span class="keyword">var</span> formatNum = [</div><div class="line">  [<span class="string">'I'</span>,<span class="string">'II'</span>,<span class="string">'III'</span>,<span class="string">'IV'</span>,<span class="string">'V'</span>,<span class="string">'VI'</span>,<span class="string">'VII'</span>,<span class="string">'VIII'</span>,<span class="string">'IX'</span>],</div><div class="line">  [<span class="string">'X'</span>,<span class="string">'XX'</span>,<span class="string">'XXX'</span>,<span class="string">'XL'</span>,<span class="string">'L'</span>,<span class="string">'LX'</span>,<span class="string">'LXX'</span>,<span class="string">'LXXX'</span>,<span class="string">'XC'</span>],</div><div class="line">  [<span class="string">'C'</span>,<span class="string">'CC'</span>,<span class="string">'CCC'</span>,<span class="string">'CD'</span>,<span class="string">'D'</span>,<span class="string">'DC'</span>,<span class="string">'DCC'</span>,<span class="string">'DCCC'</span>,<span class="string">'CM'</span>],</div><div class="line">  [<span class="string">'M'</span>,<span class="string">'MM'</span>,<span class="string">'MMM'</span>]</div><div class="line">];</div><div class="line"></div><div class="line"><span class="keyword">var</span> res = arr.reverse().map(<span class="function"><span class="keyword">function</span>(<span class="params">item,index,arr</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> formatNum[index][item<span class="number">-1</span>];</div><div class="line">&#125;);</div><div class="line"></div><div class="line">  <span class="keyword">return</span> res.reverse().join(<span class="string">''</span>);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>  一个重要的点是构造了一个二维数组来利用map函数</p>
<hr>
<h2 id="对象之间是否存在包含关系练习题"><a href="#对象之间是否存在包含关系练习题" class="headerlink" title="对象之间是否存在包含关系练习题"></a>对象之间是否存在包含关系练习题</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">whatIsInAName</span>(<span class="params">collection, source</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> keysArr = <span class="built_in">Object</span>.keys(source);</div><div class="line"></div><div class="line">  <span class="keyword">return</span> collection.filter(<span class="function"><span class="keyword">function</span>(<span class="params">itemObj</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> keysArr.every(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</div><div class="line">      <span class="keyword">return</span> source[item] == itemObj[item];</div><div class="line">    &#125;);</div><div class="line">  &#125;);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">whatIsInAName([&#123; <span class="attr">first</span>: <span class="string">"Romeo"</span>, <span class="attr">last</span>: <span class="string">"Montague"</span> &#125;, &#123; <span class="attr">first</span>: <span class="string">"Mercutio"</span>, <span class="attr">last</span>: <span class="literal">null</span> &#125;, &#123; <span class="attr">first</span>: <span class="string">"Tybalt"</span>, <span class="attr">last</span>: <span class="string">"Capulet"</span> &#125;], &#123; <span class="attr">last</span>: <span class="string">"Capulet"</span> &#125;);</div></pre></td></tr></table></figure>
<h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p>在数组的迭代方法filter中又嵌套一个every方法，增加了对数组几个迭代方法的理解和返回值的准确应用。</p>
<h2 id="多数组去重"><a href="#多数组去重" class="headerlink" title="多数组去重"></a>多数组去重</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">uniteUnique</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line">  <span class="comment">// 把所有参数放入一个真正的数组里面</span></div><div class="line">  <span class="keyword">var</span> newArr = <span class="built_in">Array</span>.from(<span class="built_in">arguments</span>);</div><div class="line">  <span class="comment">// 合并为一个数组</span></div><div class="line">  <span class="keyword">var</span> res = newArr.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">prev,cur</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> prev.concat(cur);</div><div class="line">  &#125;);</div><div class="line">  <span class="comment">// es6方法数组去重</span></div><div class="line">  <span class="keyword">return</span> <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(res));</div><div class="line">&#125;</div><div class="line"></div><div class="line">uniteUnique([<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>], [<span class="number">5</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>], [<span class="number">2</span>, <span class="number">1</span>]);</div></pre></td></tr></table></figure>
<h2 id="递归的运用练习题"><a href="#递归的运用练习题" class="headerlink" title="递归的运用练习题"></a>递归的运用练习题</h2><ul>
<li>大概题意：函数fbo()等于前两项之和，前两项都是1 ，给指定数字num,求fbo(i)小于或等于 num时其结果为奇数的各项之和</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sumFibs</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> res = <span class="number">0</span>;</div><div class="line"></div><div class="line">  <span class="comment">// fbo函数</span></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">fbo</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (n ==<span class="number">1</span> || n == <span class="number">2</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> fbo(n<span class="number">-1</span>) + fbo(n<span class="number">-2</span>);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">// 用for循环确定满足条件的项数</span></div><div class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; fbo(i) &lt;= n; i++) &#123;</div><div class="line">    <span class="keyword">if</span> (fbo(i) % <span class="number">2</span> != <span class="number">0</span>) &#123;</div><div class="line">      res += fbo(i);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">  <span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line"></div><div class="line">sumFibs(<span class="number">4</span>);</div><div class="line">sumFibs(<span class="number">75025</span>);</div></pre></td></tr></table></figure>
<p>总结 ： 让我纠结的不是递归  而是for循环 ，因为不在是常规的 for(var i = 0; i &lt; num; i++), 而这三项每项都可以改变成不同的形式，正是对平常固定思维的考验。</p>
<h2 id="js指定范围内素数求和"><a href="#js指定范围内素数求和" class="headerlink" title="js指定范围内素数求和"></a>js指定范围内素数求和</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sumPrimes</span>(<span class="params">num</span>) </span>&#123;</div><div class="line"></div><div class="line">  <span class="comment">// 构造一个数组方便使用数组的迭代方法</span></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">arr</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> res =[];</div><div class="line">    <span class="keyword">for</span>( <span class="keyword">var</span> i = <span class="number">2</span>; i &lt; n + <span class="number">1</span>; i++) &#123;</div><div class="line">      res.push(i);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> res;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">// 确定素数</span></div><div class="line">  <span class="keyword">var</span> resArr = arr(num).filter(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> arr(index + <span class="number">1</span>).every(<span class="function"><span class="keyword">function</span>(<span class="params">subItem</span>) </span>&#123;</div><div class="line">       <span class="keyword">return</span> item % subItem !== <span class="number">0</span>;</div><div class="line">    &#125;);</div><div class="line">  &#125;);</div><div class="line"></div><div class="line">  <span class="comment">// 素数求和</span></div><div class="line">  <span class="keyword">return</span> resArr.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">prev, cur</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> prev + cur;</div><div class="line">  &#125;);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">sumPrimes(<span class="number">10</span>);</div><div class="line">sumPrimes(<span class="number">977</span>);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;阿拉伯数字转化为罗马数字-转化细节&quot;&gt;&lt;a href=&quot;#阿拉伯数字转化为罗马数字-转化细节&quot; class=&quot;headerlink&quot; title=&quot;阿拉伯数字转化为罗马数字,转化细节&quot;&gt;&lt;/a&gt;阿拉伯数字转化为罗马数字,&lt;a href=&quot;http://www.sh
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://yoursite.com/2017/09/07/test/"/>
    <id>http://yoursite.com/2017/09/07/test/</id>
    <published>2017-09-07T09:34:10.773Z</published>
    <updated>2017-09-07T09:58:45.417Z</updated>
    
    <content type="html"><![CDATA[<h2 id="title1"><a href="#title1" class="headerlink" title="title1"></a>title1</h2><ul>
<li>nice</li>
</ul>
<h2 id="title2"><a href="#title2" class="headerlink" title="title2"></a>title2</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a, b</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> a + b;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="title3"><a href="#title3" class="headerlink" title="title3"></a>title3</h2><blockquote>
<p>ge</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;title1&quot;&gt;&lt;a href=&quot;#title1&quot; class=&quot;headerlink&quot; title=&quot;title1&quot;&gt;&lt;/a&gt;title1&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;nice&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;title2&quot;&gt;&lt;a href=&quot;#title2
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/09/05/hello-world/"/>
    <id>http://yoursite.com/2017/09/05/hello-world/</id>
    <published>2017-09-05T02:41:33.458Z</published>
    <updated>2017-09-07T09:43:23.407Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
